test> use mongo_practice
switched to db mongo_practice
mongo_practice> db.movies.insertMany([{title: 'Fight Club',writer: 'Chuck Palahniuko',year: 1999,actors: ['Brad Pitt','Edward Norton']},{title: 'Pulp Fiction',writer: 'Quentin Tarantino',year: 1994, actors: ['John Travolta','Uma Thurman']},{title : 'Inglorious Basterds',writer: 'Quentin Tarantino',year: 2009,actors: [ 'Brad Pitt','Diane Kruger','Eli Roth']},{title: 'The Hobbit An Unexpected Journey', writer: 'J.R.R. Tolkein', franchise: 'The Hobbit',year: 2012},{title: 'The Hobbit: The Desolation of Smaug', writer: 'J.R.R. Tolkein',year: 2013,franchise: 'The Hobbit'},{title: 'The Hobbit: The Battle of the Five Armies',writer: 'J.R.R. Tolkein',year: 2012,franchise: 'The Hobbit',synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness'},{title: "Pee Wee Herman's Big Adventure"},{title: 'Avatar'}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("61e79bd1c6717f5a93da955c"),
    '1': ObjectId("61e79bd1c6717f5a93da955d"),
    '2': ObjectId("61e79bd1c6717f5a93da955e"),
    '3': ObjectId("61e79bd1c6717f5a93da955f"),
    '4': ObjectId("61e79bd1c6717f5a93da9560"),
    '5': ObjectId("61e79bd1c6717f5a93da9561"),
    '6': ObjectId("61e79bd1c6717f5a93da9562"),
    '7': ObjectId("61e79bd1c6717f5a93da9563")
  }
}
mongo_practice> db.movies.find()
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955c"),
    title: 'Fight Club',
    writer: 'Chuck Palahniuko',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955d"),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955e"),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9561"),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9562"),
    title: "Pee Wee Herman's Big Adventure"
  },
  { _id: ObjectId("61e79bd1c6717f5a93da9563"), title: 'Avatar' }
]
mongo_practice> db.movies.find({writer:'Quentin Tarantino'})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955d"),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955e"),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  }
]
mongo_practice> db.movies.find({actors:'Brad Pitt'})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955c"),
    title: 'Fight Club',
    writer: 'Chuck Palahniuko',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955e"),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  }
]
mongo_practice> db.movies.find({franchise:{$eq:'The Hobbit'}})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9561"),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness'
  }
]
mongo_practice> db.movies.find({year:{$gte:1990,$lte:1999}})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955c"),
    title: 'Fight Club',
    writer: 'Chuck Palahniuko',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955d"),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  }
]
mongo_practice> db.movies.find({$or:[{year:{$lte:2000}},{year:{$gte:2010}}]})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955c"),
    title: 'Fight Club',
    writer: 'Chuck Palahniuko',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955d"),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9561"),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness'
  }
mongo_practice> db.movies.update({title:'The Hobbit An Unexpected Journey'},{$set:{synopsis:'A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it from the dragon Smaug.'}})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_practice> db.movies.find({title:"The Hobbit An Unexpected Journey"})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012,
    synopsis: 'A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it from the dragon Smaug.'
  }
]
mongo_practice> db.movies.update({title:'The Hobbit: The Desolation of Smaug'},{$set:{synopsis:"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
... }})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_practice> db.movies.find({title:"The Hobbit: The Desolation of Smaug"})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  }
]
mongo_practice> db.movies.update({title:'Pulp Fiction'},{$push:{actors:'Samuel L. Jackson'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_practice> db.movies.find({title:'Pulp Fiction'})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955d"),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman', 'Samuel L. Jackson' ]
  }
]
mongo_practice> db.movies.createIndex({synopsis:"text"})
synopsis_text
mongo_practice> db.movies.find({$text:{$search:'Bilbo'}})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9561"),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012,
    synopsis: 'A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it from the dragon Smaug.'
  }
]
mongo_practice> db.movies.find({$text:{$search:'Gandalf'}})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  }
]
mongo_practice> db.movies.find({$text:{$search:'Bilbo -Gandalf'}})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da9561"),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012,
    synopsis: 'A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it from the dragon Smaug.'
  }
]
mongo_practice> db.movies.find({$text:{$search:'dwarves hobbit'}})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012,
    synopsis: 'A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it from the dragon Smaug.'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  }
]
mongo_practice> db.movies.find({$text:{$search:'gold',$search:'dragon'}})
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012,
    synopsis: 'A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it from the dragon Smaug.'
  }
]
mongo_practice> db.movies.deleteOne({title:"Pee Wee Herman's Big Adventure"})
{ acknowledged: true, deletedCount: 1 }
mongo_practice> db.movies.deleteOne({title:'Avatar'})
{ acknowledged: true, deletedCount: 1 }
mongo_practice> db.movies.find()
[
  {
    _id: ObjectId("61e79bd1c6717f5a93da955c"),
    title: 'Fight Club',
    writer: 'Chuck Palahniuko',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955d"),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman', 'Samuel L. Jackson' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955e"),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da955f"),
    title: 'The Hobbit An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    franchise: 'The Hobbit',
    year: 2012,
    synopsis: 'A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it from the dragon Smaug.'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9560"),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  },
  {
    _id: ObjectId("61e79bd1c6717f5a93da9561"),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness'
  }
]
mongo_practice> db.users.insertMany([{username: 'GoodGuyGreg' ,first_name: "Good Guy" ,last_name: "Greg"},{username: 'ScumbagSteve',full_name:{first: "Scumbag", last: "Steve"}}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("61e7abeac6717f5a93da9568"),
    '1': ObjectId("61e7abeac6717f5a93da9569")
  }
}
mongo_practice> db.posts.insertMany([{username: 'GoodGuyGreg',title: 'Passes out at party',body: 'Wakes up early and cleans house'},{username: 'GoodGuyGreg',title: 'Steals your identity', body: 'Raises your credit score'},{username: 'GoodGuy Greg',title : 'Reports a bug in your code',body: 'Sends you a Pull Request'},{username: 'ScumbagSteve',title: 'Borrows something',body: 'Sells it'},{username: 'ScumbagSteve',title: 'Borrows everything', body: 'The end'},{username: 'ScumbagSteve', title: 'Forks your repo on github',body: 'Sets to private'}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("61e7ada9c6717f5a93da956a"),
    '1': ObjectId("61e7ada9c6717f5a93da956b"),
    '2': ObjectId("61e7ada9c6717f5a93da956c"),
    '3': ObjectId("61e7ada9c6717f5a93da956d"),
    '4': ObjectId("61e7ada9c6717f5a93da956e"),
    '5': ObjectId("61e7ada9c6717f5a93da956f")
  }
}
mongo_practice> db.comments.insertMany([{username: 'GoodGuyGreg',comment: 'Hope you got a good deal!',post: [ObjectId("61e7ada9c6717f5a93da956d")]},{username: 'GoodGuy Greg',comment: "What's mine is yours!",post :[ObjectId("61e7ada9c6717f5a93da956e")]},{username: 'GoodGuy Greg',comment: "Don't violate the licensing agreement!",post :[ObjectId("61e7ada9c6717f5a93da956f")]},{username: "ScumbagSteve", comment: "It still isn't dean",post: [ObjectId("61e7ada9c6717f5a93da956a")]},{username: 'ScumbagSteve',comment: "Denied your PR cause I found a hack", post:[ObjectId("61e7ada9c6717f5a93da956c")]}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("61e7b244c6717f5a93da9570"),
    '1': ObjectId("61e7b244c6717f5a93da9571"),
    '2': ObjectId("61e7b244c6717f5a93da9572"),
    '3': ObjectId("61e7b244c6717f5a93da9573"),
    '4': ObjectId("61e7b244c6717f5a93da9574")
  }
}
mongo_practice> db.users.find()
[
  {
    _id: ObjectId("61e7ab2cc6717f5a93da9564"),
    username: 'GoodGuyGreg',
    first_name: 'Good Guy',
    last_name: 'Greg'
  },
  {
    _id: ObjectId("61e7ab2cc6717f5a93da9565"),
    username: 'ScumbagSteve',
    full_name: { first: 'Scumbag', last: 'Steve' }
  },
  {
    _id: ObjectId("61e7ab5cc6717f5a93da9566"),
    username: 'GoodGuyGreg',
    first_name: 'Good Guy',
    last_name: 'Greg'
  },
  {
    _id: ObjectId("61e7ab5cc6717f5a93da9567"),
    username: 'ScumbagSteve',
    full_name: { first: 'Scumbag', last: 'Steve' }
  },
  {
    _id: ObjectId("61e7abeac6717f5a93da9568"),
    username: 'GoodGuyGreg',
    first_name: 'Good Guy',
    last_name: 'Greg'
  },
  {
    _id: ObjectId("61e7abeac6717f5a93da9569"),
    username: 'ScumbagSteve',
    full_name: { first: 'Scumbag', last: 'Steve' }
  }
]
mongo_practice> db.posts.find()
[
  {
    _id: ObjectId("61e7ada9c6717f5a93da956a"),
    username: 'GoodGuyGreg',
    title: 'Passes out at party',
    body: 'Wakes up early and cleans house'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956b"),
    username: 'GoodGuyGreg',
    title: 'Steals your identity',
    body: 'Raises your credit score'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956c"),
    username: 'GoodGuy Greg',
    title: 'Reports a bug in your code',
    body: 'Sends you a Pull Request'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956d"),
    username: 'ScumbagSteve',
    title: 'Borrows something',
    body: 'Sells it'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956e"),
    username: 'ScumbagSteve',
    title: 'Borrows everything',
    body: 'The end'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956f"),
    username: 'ScumbagSteve',
    title: 'Forks your repo on github',
    body: 'Sets to private'
  }
]
mongo_practice> db.posts.find({username:'GoodGuyGreg'})
[
  {
    _id: ObjectId("61e7ada9c6717f5a93da956a"),
    username: 'GoodGuyGreg',
    title: 'Passes out at party',
    body: 'Wakes up early and cleans house'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956b"),
    username: 'GoodGuyGreg',
    title: 'Steals your identity',
    body: 'Raises your credit score'
  }
]
mongo_practice> db.posts.update({_id:ObjectId("61e7ada9c6717f5a93da956c")},{$set:{username:'GoodGuyGreg'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_practice> db.posts.find({username:'GoodGuyGreg'})
[
  {
    _id: ObjectId("61e7ada9c6717f5a93da956a"),
    username: 'GoodGuyGreg',
    title: 'Passes out at party',
    body: 'Wakes up early and cleans house'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956b"),
    username: 'GoodGuyGreg',
    title: 'Steals your identity',
    body: 'Raises your credit score'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956c"),
    username: 'GoodGuyGreg',
    title: 'Reports a bug in your code',
    body: 'Sends you a Pull Request'
  }
]
mongo_practice> db.posts.find({username:'Scumbag Steve'})

mongo_practice> db.posts.find({username:'ScumbagSteve'})
[
  {
    _id: ObjectId("61e7ada9c6717f5a93da956d"),
    username: 'ScumbagSteve',
    title: 'Borrows something',
    body: 'Sells it'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956e"),
    username: 'ScumbagSteve',
    title: 'Borrows everything',
    body: 'The end'
  },
  {
    _id: ObjectId("61e7ada9c6717f5a93da956f"),
    username: 'ScumbagSteve',
    title: 'Forks your repo on github',
    body: 'Sets to private'
  }
]
mongo_practice> db.comments.find()
[
  {
    _id: ObjectId("61e7b244c6717f5a93da9570"),
    username: 'GoodGuyGreg',
    comment: 'Hope you got a good deal!',
    post: [ ObjectId("61e7ada9c6717f5a93da956d") ]
  },
  {
    _id: ObjectId("61e7b244c6717f5a93da9571"),
    username: 'GoodGuy Greg',
    comment: "What's mine is yours!",
    post: [ ObjectId("61e7ada9c6717f5a93da956e") ]
  },
  {
    _id: ObjectId("61e7b244c6717f5a93da9572"),
    username: 'GoodGuy Greg',
    comment: "Don't violate the licensing agreement!",
    post: [ ObjectId("61e7ada9c6717f5a93da956f") ]
  },
  {
    _id: ObjectId("61e7b244c6717f5a93da9573"),
    username: 'ScumbagSteve',
    comment: "It still isn't dean",
    post: [ ObjectId("61e7ada9c6717f5a93da956a") ]
  },
  {
    _id: ObjectId("61e7b244c6717f5a93da9574"),
    username: 'ScumbagSteve',
    comment: 'Denied your PR cause I found a hack',
    post: [ ObjectId("61e7ada9c6717f5a93da956c") ]
  }
]
mongo_practice> db.comments.find({username:'GoodGuyGreg'})
[
  {
    _id: ObjectId("61e7b244c6717f5a93da9570"),
    username: 'GoodGuyGreg',
    comment: 'Hope you got a good deal!',
    post: [ ObjectId("61e7ada9c6717f5a93da956d") ]
  }
]
mongo_practice> db.comments.update({_id:ObjectId("61e7b244c6717f5a93da9571")},{$set:{username:"GoodGuyGreg"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_practice> db.comments.update({_id: ObjectId("61e7b244c6717f5a93da9572")},{$set:{username:"GoodGuyGreg"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_practice> db.comments.find({username:'GoodGuyGreg'})
[
  {
    _id: ObjectId("61e7b244c6717f5a93da9570"),
    username: 'GoodGuyGreg',
    comment: 'Hope you got a good deal!',
    post: [ ObjectId("61e7ada9c6717f5a93da956d") ]
  },
  {
    _id: ObjectId("61e7b244c6717f5a93da9571"),
    username: 'GoodGuyGreg',
    comment: "What's mine is yours!",
    post: [ ObjectId("61e7ada9c6717f5a93da956e") ]
  },
  {
    _id: ObjectId("61e7b244c6717f5a93da9572"),
    username: 'GoodGuyGreg',
    comment: "Don't violate the licensing agreement!",
    post: [ ObjectId("61e7ada9c6717f5a93da956f") ]
  }
]
mongo_practice> db.comments.find({username:'ScumbagSteve'})
[
  {
    _id: ObjectId("61e7b244c6717f5a93da9573"),
    username: 'ScumbagSteve',
    comment: "It still isn't dean",
    post: [ ObjectId("61e7ada9c6717f5a93da956a") ]
  },
  {
    _id: ObjectId("61e7b244c6717f5a93da9574"),
    username: 'ScumbagSteve',
    comment: 'Denied your PR cause I found a hack',
    post: [ ObjectId("61e7ada9c6717f5a93da956c") ]
  }
]
mongo_practice> db.comments.find({post:ObjectId("61e7ada9c6717f5a93da956c")})
[
  {
    _id: ObjectId("61e7b244c6717f5a93da9574"),
    username: 'ScumbagSteve',
    comment: 'Denied your PR cause I found a hack',
    post: [ ObjectId("61e7ada9c6717f5a93da956c") ]
  }
]